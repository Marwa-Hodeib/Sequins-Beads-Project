{
  "{\"sourceRoot\":\"/home/marwa/Docs/Squins/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/marwa/Docs/Squins/back\",\"filename\":\"/home/marwa/Docs/Squins/back/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/marwa/Docs/Squins/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/marwa/Docs/Squins/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/marwa/Docs/Squins/back",
      "filename": "/home/marwa/Docs/Squins/back/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/marwa/Docs/Squins/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/marwa/Docs/Squins/back/src/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/marwa/Docs/Squins/back/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/marwa/Docs/Squins/back/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _db = _interopRequireDefault(require(\"./db\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = (0, _express[\"default\"])();\n\nvar start =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5() {\n    var controller;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            controller = _context5.sent;\n            app.get(\"/\", function (req, res) {\n              // const result =await controller.getcollection();\n              // res.send(\"result\");});\n              res.send(\"Welcome!\");\n            }); // }(node:11651) UnhandledPromiseRejectionWarning: TypeError: (0 , _db.default) is not a function\n\n            app.get(\"/all\",\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(req, res) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return controller.getcollection();\n\n                      case 2:\n                        result = _context.sent;\n                        res.json(result);\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x, _x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n            app.get(\"/all/collection/:id\",\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(req, res) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return controller.getcollectionById(req.params.id);\n\n                      case 2:\n                        result = _context2.sent;\n                        res.json(result);\n\n                      case 4:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x3, _x4) {\n                return _ref3.apply(this, arguments);\n              };\n            }());\n            app.get(\"/all/collection/name/:name\",\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(req, res) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return controller.getcollectionByName(req.params.name);\n\n                      case 2:\n                        result = _context3.sent;\n                        res.json(result);\n\n                      case 4:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function (_x5, _x6) {\n                return _ref4.apply(this, arguments);\n              };\n            }());\n            app.get('/collection/update/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(req, res) {\n                var id, name, result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        id = req.params.id;\n                        name = req.query.name;\n                        _context4.next = 4;\n                        return controller.updateContact(id, {\n                          name: name\n                        });\n\n                      case 4:\n                        result = _context4.sent;\n                        res.json(result);\n\n                      case 6:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function (_x7, _x8) {\n                return _ref5.apply(this, arguments);\n              };\n            }());\n\n          case 8:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function start() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\napp.listen(8080, function () {\n  console.log(\"port 8080\");\n});\nstart();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInN0YXJ0IiwiY29udHJvbGxlciIsImdldCIsInJlcSIsInJlcyIsInNlbmQiLCJnZXRjb2xsZWN0aW9uIiwicmVzdWx0IiwianNvbiIsImdldGNvbGxlY3Rpb25CeUlkIiwicGFyYW1zIiwiaWQiLCJnZXRjb2xsZWN0aW9uQnlOYW1lIiwibmFtZSIsInF1ZXJ5IiwidXBkYXRlQ29udGFjdCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7Ozs7O0FBR0EsSUFBTUEsR0FBRyxHQUFHLDBCQUFaOztBQUVBLElBQU1DLEtBQUs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDBCQUFHO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBQ2EscUJBRGI7O0FBQUE7QUFDTkMsWUFBQUEsVUFETTtBQUdaRixZQUFBQSxHQUFHLENBQUNHLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDekI7QUFDQTtBQUNBQSxjQUFBQSxHQUFHLENBQUNDLElBQUosQ0FBUyxVQUFUO0FBQ0QsYUFKRCxFQUhZLENBUVo7O0FBRUFOLFlBQUFBLEdBQUcsQ0FBQ0csR0FBSixDQUFRLE1BQVI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHNDQUFnQixpQkFBT0MsR0FBUCxFQUFZQyxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsK0JBQ09ILFVBQVUsQ0FBQ0ssYUFBWCxFQURQOztBQUFBO0FBQ1JDLHdCQUFBQSxNQURRO0FBRWRILHdCQUFBQSxHQUFHLENBQUNJLElBQUosQ0FBU0QsTUFBVDs7QUFGYztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQUFoQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUlBUixZQUFBQSxHQUFHLENBQUNHLEdBQUosQ0FBUSxxQkFBUjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsc0NBQStCLGtCQUFPQyxHQUFQLEVBQVlDLEdBQVo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwrQkFDUkgsVUFBVSxDQUFDUSxpQkFBWCxDQUE2Qk4sR0FBRyxDQUFDTyxNQUFKLENBQVdDLEVBQXhDLENBRFE7O0FBQUE7QUFDdkJKLHdCQUFBQSxNQUR1QjtBQUU3Qkgsd0JBQUFBLEdBQUcsQ0FBQ0ksSUFBSixDQUFTRCxNQUFUOztBQUY2QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQUEvQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUlBUixZQUFBQSxHQUFHLENBQUNHLEdBQUosQ0FBUSw0QkFBUjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsc0NBQXNDLGtCQUFPQyxHQUFQLEVBQVlDLEdBQVo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwrQkFDZkgsVUFBVSxDQUFDVyxtQkFBWCxDQUErQlQsR0FBRyxDQUFDTyxNQUFKLENBQVdHLElBQTFDLENBRGU7O0FBQUE7QUFDOUJOLHdCQUFBQSxNQUQ4QjtBQUVwQ0gsd0JBQUFBLEdBQUcsQ0FBQ0ksSUFBSixDQUFTRCxNQUFUOztBQUZvQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQUF0Qzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUtBUixZQUFBQSxHQUFHLENBQUNHLEdBQUosQ0FBUSx3QkFBUjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsc0NBQWtDLGtCQUFPQyxHQUFQLEVBQVlDLEdBQVo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ3hCTyx3QkFBQUEsRUFEd0IsR0FDakJSLEdBQUcsQ0FBQ08sTUFEYSxDQUN4QkMsRUFEd0I7QUFFeEJFLHdCQUFBQSxJQUZ3QixHQUVmVixHQUFHLENBQUNXLEtBRlcsQ0FFeEJELElBRndCO0FBQUE7QUFBQSwrQkFHWFosVUFBVSxDQUFDYyxhQUFYLENBQXlCSixFQUF6QixFQUE0QjtBQUFDRSwwQkFBQUEsSUFBSSxFQUFKQTtBQUFELHlCQUE1QixDQUhXOztBQUFBO0FBRzFCTix3QkFBQUEsTUFIMEI7QUFJaENILHdCQUFBQSxHQUFHLENBQUNJLElBQUosQ0FBU0QsTUFBVDs7QUFKZ0M7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZUFBbEM7O0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBdkJZO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQUxQLEtBQUs7QUFBQTtBQUFBO0FBQUEsR0FBWDs7QUFrQ0FELEdBQUcsQ0FBQ2lCLE1BQUosQ0FBVyxJQUFYLEVBQWlCLFlBQU07QUFDckJDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFdBQVo7QUFDRCxDQUZEO0FBR0FsQixLQUFLIiwic291cmNlUm9vdCI6Ii9ob21lL21hcndhL0RvY3MvU3F1aW5zL2JhY2svc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCBkYiBmcm9tIFwiLi9kYlwiO1xuaW1wb3J0IGluaXRpYWxpemVEQiBmcm9tIFwiLi9kYlwiO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbmNvbnN0IHN0YXJ0ID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCBjb250cm9sbGVyID0gYXdhaXQgaW5pdGlhbGl6ZURCKCk7XG5cbiAgYXBwLmdldChcIi9cIiwgKHJlcSwgcmVzKSA9PiB7XG4gICAgLy8gY29uc3QgcmVzdWx0ID1hd2FpdCBjb250cm9sbGVyLmdldGNvbGxlY3Rpb24oKTtcbiAgICAvLyByZXMuc2VuZChcInJlc3VsdFwiKTt9KTtcbiAgICByZXMuc2VuZChcIldlbGNvbWUhXCIpO1xuICB9KTtcbiAgLy8gfShub2RlOjExNjUxKSBVbmhhbmRsZWRQcm9taXNlUmVqZWN0aW9uV2FybmluZzogVHlwZUVycm9yOiAoMCAsIF9kYi5kZWZhdWx0KSBpcyBub3QgYSBmdW5jdGlvblxuXG4gIGFwcC5nZXQoXCIvYWxsXCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGNvbnRyb2xsZXIuZ2V0Y29sbGVjdGlvbigpO1xuICAgIHJlcy5qc29uKHJlc3VsdCk7XG4gIH0pO1xuICBhcHAuZ2V0KFwiL2FsbC9jb2xsZWN0aW9uLzppZFwiLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjb250cm9sbGVyLmdldGNvbGxlY3Rpb25CeUlkKHJlcS5wYXJhbXMuaWQpO1xuICAgIHJlcy5qc29uKHJlc3VsdCk7XG4gIH0pO1xuICBhcHAuZ2V0KFwiL2FsbC9jb2xsZWN0aW9uL25hbWUvOm5hbWVcIiwgYXN5bmMgKHJlcSwgcmVzKT0+IHtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjb250cm9sbGVyLmdldGNvbGxlY3Rpb25CeU5hbWUocmVxLnBhcmFtcy5uYW1lKTtcbiAgICByZXMuanNvbihyZXN1bHQpO1xuICB9KTtcblxuICBhcHAuZ2V0KCcvY29sbGVjdGlvbi91cGRhdGUvOmlkJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgeyBpZCB9ID0gcmVxLnBhcmFtc1xuICAgIGNvbnN0IHsgbmFtZSB9ID0gcmVxLnF1ZXJ5XG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgY29udHJvbGxlci51cGRhdGVDb250YWN0KGlkLHtuYW1lfSlcbiAgICByZXMuanNvbihyZXN1bHQpXG4gIH0pXG5cblxuXG59O1xuXG5hcHAubGlzdGVuKDgwODAsICgpID0+IHtcbiAgY29uc29sZS5sb2coXCJwb3J0IDgwODBcIik7XG59KTtcbnN0YXJ0KCk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "start",
        "controller",
        "get",
        "req",
        "res",
        "send",
        "getcollection",
        "result",
        "json",
        "getcollectionById",
        "params",
        "id",
        "getcollectionByName",
        "name",
        "query",
        "updateContact",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;;;;;;;AAGA,IAAMA,GAAG,GAAG,0BAAZ;;AAEA,IAAMC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACa,qBADb;;AAAA;AACNC,YAAAA,UADM;AAGZF,YAAAA,GAAG,CAACG,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzB;AACA;AACAA,cAAAA,GAAG,CAACC,IAAJ,CAAS,UAAT;AACD,aAJD,EAHY,CAQZ;;AAEAN,YAAAA,GAAG,CAACG,GAAJ,CAAQ,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAgB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACOH,UAAU,CAACK,aAAX,EADP;;AAAA;AACRC,wBAAAA,MADQ;AAEdH,wBAAAA,GAAG,CAACI,IAAJ,CAASD,MAAT;;AAFc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAhB;;AAAA;AAAA;AAAA;AAAA;AAIAR,YAAAA,GAAG,CAACG,GAAJ,CAAQ,qBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAA+B,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACRH,UAAU,CAACQ,iBAAX,CAA6BN,GAAG,CAACO,MAAJ,CAAWC,EAAxC,CADQ;;AAAA;AACvBJ,wBAAAA,MADuB;AAE7BH,wBAAAA,GAAG,CAACI,IAAJ,CAASD,MAAT;;AAF6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA/B;;AAAA;AAAA;AAAA;AAAA;AAIAR,YAAAA,GAAG,CAACG,GAAJ,CAAQ,4BAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAsC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACfH,UAAU,CAACW,mBAAX,CAA+BT,GAAG,CAACO,MAAJ,CAAWG,IAA1C,CADe;;AAAA;AAC9BN,wBAAAA,MAD8B;AAEpCH,wBAAAA,GAAG,CAACI,IAAJ,CAASD,MAAT;;AAFoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAtC;;AAAA;AAAA;AAAA;AAAA;AAKAR,YAAAA,GAAG,CAACG,GAAJ,CAAQ,wBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAkC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBO,wBAAAA,EADwB,GACjBR,GAAG,CAACO,MADa,CACxBC,EADwB;AAExBE,wBAAAA,IAFwB,GAEfV,GAAG,CAACW,KAFW,CAExBD,IAFwB;AAAA;AAAA,+BAGXZ,UAAU,CAACc,aAAX,CAAyBJ,EAAzB,EAA4B;AAACE,0BAAAA,IAAI,EAAJA;AAAD,yBAA5B,CAHW;;AAAA;AAG1BN,wBAAAA,MAH0B;AAIhCH,wBAAAA,GAAG,CAACI,IAAJ,CAASD,MAAT;;AAJgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAlC;;AAAA;AAAA;AAAA;AAAA;;AAvBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALP,KAAK;AAAA;AAAA;AAAA,GAAX;;AAkCAD,GAAG,CAACiB,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,CAFD;AAGAlB,KAAK",
      "sourceRoot": "/home/marwa/Docs/Squins/back/src",
      "sourcesContent": [
        "import express from \"express\";\nimport db from \"./db\";\nimport initializeDB from \"./db\";\n\nconst app = express();\n\nconst start = async () => {\n  const controller = await initializeDB();\n\n  app.get(\"/\", (req, res) => {\n    // const result =await controller.getcollection();\n    // res.send(\"result\");});\n    res.send(\"Welcome!\");\n  });\n  // }(node:11651) UnhandledPromiseRejectionWarning: TypeError: (0 , _db.default) is not a function\n\n  app.get(\"/all\", async (req, res) => {\n    const result = await controller.getcollection();\n    res.json(result);\n  });\n  app.get(\"/all/collection/:id\", async (req, res) => {\n    const result = await controller.getcollectionById(req.params.id);\n    res.json(result);\n  });\n  app.get(\"/all/collection/name/:name\", async (req, res)=> {\n    const result = await controller.getcollectionByName(req.params.name);\n    res.json(result);\n  });\n\n  app.get('/collection/update/:id', async (req, res) => {\n    const { id } = req.params\n    const { name } = req.query\n    const result = await controller.updateContact(id,{name})\n    res.json(result)\n  })\n\n\n\n};\n\napp.listen(8080, () => {\n  console.log(\"port 8080\");\n});\nstart();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581089412180
  },
  "{\"sourceRoot\":\"/home/marwa/Docs/Squins/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/marwa/Docs/Squins/back\",\"filename\":\"/home/marwa/Docs/Squins/back/src/db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/marwa/Docs/Squins/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/marwa/Docs/Squins/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/marwa/Docs/Squins/back",
      "filename": "/home/marwa/Docs/Squins/back/src/db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/marwa/Docs/Squins/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/marwa/Docs/Squins/back/src/db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/marwa/Docs/Squins/back/src/db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/marwa/Docs/Squins/back/src",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar initializeDB =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5() {\n    var db, getcollection, getcollectionById, getcollectionByName, updateContact, controller;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _sqlite[\"default\"].open(\"./db.sqlite\");\n\n          case 2:\n            db = _context5.sent;\n\n            /*   await db.run(`CREATE TABLE admin (\n                  admin_id integer NOT NULL CONSTRAINT admin_pk PRIMARY KEY,\n                  admin_user text NOT NULL,\n                  admin_pass text NOT NULL\n              );`)\n              await db.run(`CREATE TABLE category (\n                  category_id integer NOT NULL CONSTRAINT category_pk PRIMARY KEY,\n                  category_name text NOT NULL\n              );`)\n                await db.run(`CREATE TABLE collection (\n                  collection_id integer NOT NULL CONSTRAINT collection_pk PRIMARY KEY,\n                  collection_name text NOT NULL\n              );`)\n                   await db.run(`CREATE TABLE image (\n                      image_id integer NOT NULL CONSTRAINT image_pk PRIMARY KEY,\n                      product_product_id integer NOT NULL,\n                      image_name text NOT NULL,\n                      CONSTRAINT image_product FOREIGN KEY (product_product_id)\n                      REFERENCES product (product_id)\n                  );`) */\n\n            /*                 await db.run(`CREATE TABLE \"order\" (\n                              order_id integer NOT NULL CONSTRAINT order_pk PRIMARY KEY,\n                              order_date text NOT NULL,\n                              order_quantity integer NOT NULL,\n                              order_amount integer NOT NULL,\n                              product_product_id integer NOT NULL,\n                              client_name text NOT NULL,\n                              area text NOT NULL,\n                              CONSTRAINT order_product FOREIGN KEY (product_product_id)\n                              REFERENCES product (product_id)\n                          );`)\n            } */\n\n            /*                 await db.run(`CREATE TABLE product (\n                              product_id integer NOT NULL CONSTRAINT product_pk PRIMARY KEY,\n                              product_name text NOT NULL,\n                              product_description text NOT NULL,\n                              product_price integer NOT NULL,\n                              product_quantity integer NOT NULL,\n                              product_date text NOT NULL,\n                              category_category_id integer NOT NULL,\n                              collection_collection_id integer NOT NULL,\n                              CONSTRAINT product_category FOREIGN KEY (category_category_id)\n                              REFERENCES category (category_id),\n                              CONSTRAINT product_collection FOREIGN KEY (collection_collection_id)\n                              REFERENCES collection (collection_id)\n                          );`) */\n            // await db.run(`insert into collection (collection_name) values ('zeinab');`)\n            getcollection =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee() {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return db.all(\"select * from collection\");\n\n                      case 2:\n                        rows = _context.sent;\n                        return _context.abrupt(\"return\", rows);\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function getcollection() {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            getcollectionById =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(id) {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return db.all(\"select * from collection where collection_id =\".concat(id, \" \"));\n\n                      case 2:\n                        rows = _context2.sent;\n                        return _context2.abrupt(\"return\", rows);\n\n                      case 4:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function getcollectionById(_x) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            getcollectionByName =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(name) {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return db.all(\"select * from collection where collection_name = '\".concat(name, \"'\"));\n\n                      case 2:\n                        rows = _context3.sent;\n                        return _context3.abrupt(\"return\", rows);\n\n                      case 4:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function getcollectionByName(_x2) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            updateContact =\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(id, props) {\n                var name, result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        name = props.name;\n                        _context4.next = 3;\n                        return db.run(\"UPDATE collection SET collectin_name=\\u2019\".concat(name, \"\\u2019 WHERE collection_id = \").concat(id));\n\n                      case 3:\n                        result = _context4.sent;\n\n                      case 4:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function updateContact(_x3, _x4) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            controller = {\n              getcollection: getcollection,\n              getcollectionById: getcollectionById,\n              getcollectionByName: getcollectionByName,\n              updateContact: updateContact\n            };\n            return _context5.abrupt(\"return\", controller);\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function initializeDB() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = initializeDB;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImluaXRpYWxpemVEQiIsInNxbGl0ZSIsIm9wZW4iLCJkYiIsImdldGNvbGxlY3Rpb24iLCJhbGwiLCJyb3dzIiwiZ2V0Y29sbGVjdGlvbkJ5SWQiLCJpZCIsImdldGNvbGxlY3Rpb25CeU5hbWUiLCJuYW1lIiwidXBkYXRlQ29udGFjdCIsInByb3BzIiwicnVuIiwicmVzdWx0IiwiY29udHJvbGxlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7OztBQUVBLElBQU1BLFlBQVk7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDBCQUFHO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBQ0ZDLG1CQUFPQyxJQUFQLENBQVksYUFBWixDQURFOztBQUFBO0FBQ2JDLFlBQUFBLEVBRGE7O0FBRW5COzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFvQkE7Ozs7Ozs7Ozs7Ozs7QUFZQTs7Ozs7Ozs7Ozs7Ozs7QUFlQTtBQUVNQyxZQUFBQSxhQW5EYTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsc0NBbURHO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsK0JBQ0RELEVBQUUsQ0FBQ0UsR0FBSCxDQUFPLDBCQUFQLENBREM7O0FBQUE7QUFDZEMsd0JBQUFBLElBRGM7QUFBQSx5REFFYkEsSUFGYTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQW5ESDs7QUFBQSw4QkFtRGJGLGFBbkRhO0FBQUE7QUFBQTtBQUFBOztBQXVEYkcsWUFBQUEsaUJBdkRhO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxzQ0F1RE8sa0JBQU9DLEVBQVA7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwrQkFDTEwsRUFBRSxDQUFDRSxHQUFILHlEQUF3REcsRUFBeEQsT0FESzs7QUFBQTtBQUNsQkYsd0JBQUFBLElBRGtCO0FBQUEsMERBRWpCQSxJQUZpQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQXZEUDs7QUFBQSw4QkF1RGJDLGlCQXZEYTtBQUFBO0FBQUE7QUFBQTs7QUEyRGJFLFlBQUFBLG1CQTNEYTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsc0NBMkRTLGtCQUFNQyxJQUFOO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsK0JBQ05QLEVBQUUsQ0FBQ0UsR0FBSCw2REFBNERLLElBQTVELE9BRE07O0FBQUE7QUFDcEJKLHdCQUFBQSxJQURvQjtBQUFBLDBEQUVuQkEsSUFGbUI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZUEzRFQ7O0FBQUEsOEJBMkRiRyxtQkEzRGE7QUFBQTtBQUFBO0FBQUE7O0FBK0RiRSxZQUFBQSxhQS9EYTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsc0NBK0RHLGtCQUFPSCxFQUFQLEVBQVdJLEtBQVg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ1pGLHdCQUFBQSxJQURZLEdBQ0pFLEtBREksQ0FDWkYsSUFEWTtBQUFBO0FBQUEsK0JBRUNQLEVBQUUsQ0FBQ1UsR0FBSCxzREFBZ0RILElBQWhELDBDQUErRUYsRUFBL0UsRUFGRDs7QUFBQTtBQUVkTSx3QkFBQUEsTUFGYzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQS9ESDs7QUFBQSw4QkErRGJILGFBL0RhO0FBQUE7QUFBQTtBQUFBOztBQW9FYkksWUFBQUEsVUFwRWEsR0FvRUE7QUFDakJYLGNBQUFBLGFBQWEsRUFBYkEsYUFEaUI7QUFFakJHLGNBQUFBLGlCQUFpQixFQUFqQkEsaUJBRmlCO0FBR2pCRSxjQUFBQSxtQkFBbUIsRUFBbkJBLG1CQUhpQjtBQUlqQkUsY0FBQUEsYUFBYSxFQUFiQTtBQUppQixhQXBFQTtBQUFBLDhDQTJFWkksVUEzRVk7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBSDs7QUFBQSxrQkFBWmYsWUFBWTtBQUFBO0FBQUE7QUFBQSxHQUFsQjs7ZUE2RWVBLFkiLCJzb3VyY2VSb290IjoiL2hvbWUvbWFyd2EvRG9jcy9TcXVpbnMvYmFjay9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3FsaXRlIGZyb20gXCJzcWxpdGVcIjtcblxuY29uc3QgaW5pdGlhbGl6ZURCID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCBkYiA9IGF3YWl0IHNxbGl0ZS5vcGVuKFwiLi9kYi5zcWxpdGVcIik7XG4gIC8qICAgYXdhaXQgZGIucnVuKGBDUkVBVEUgVEFCTEUgYWRtaW4gKFxuICAgICAgICBhZG1pbl9pZCBpbnRlZ2VyIE5PVCBOVUxMIENPTlNUUkFJTlQgYWRtaW5fcGsgUFJJTUFSWSBLRVksXG4gICAgICAgIGFkbWluX3VzZXIgdGV4dCBOT1QgTlVMTCxcbiAgICAgICAgYWRtaW5fcGFzcyB0ZXh0IE5PVCBOVUxMXG4gICAgKTtgKVxuICAgIGF3YWl0IGRiLnJ1bihgQ1JFQVRFIFRBQkxFIGNhdGVnb3J5IChcbiAgICAgICAgY2F0ZWdvcnlfaWQgaW50ZWdlciBOT1QgTlVMTCBDT05TVFJBSU5UIGNhdGVnb3J5X3BrIFBSSU1BUlkgS0VZLFxuICAgICAgICBjYXRlZ29yeV9uYW1lIHRleHQgTk9UIE5VTExcbiAgICApO2ApXG4gICAgICBhd2FpdCBkYi5ydW4oYENSRUFURSBUQUJMRSBjb2xsZWN0aW9uIChcbiAgICAgICAgY29sbGVjdGlvbl9pZCBpbnRlZ2VyIE5PVCBOVUxMIENPTlNUUkFJTlQgY29sbGVjdGlvbl9wayBQUklNQVJZIEtFWSxcbiAgICAgICAgY29sbGVjdGlvbl9uYW1lIHRleHQgTk9UIE5VTExcbiAgICApO2ApXG4gICAgICAgICBhd2FpdCBkYi5ydW4oYENSRUFURSBUQUJMRSBpbWFnZSAoXG4gICAgICAgICAgICBpbWFnZV9pZCBpbnRlZ2VyIE5PVCBOVUxMIENPTlNUUkFJTlQgaW1hZ2VfcGsgUFJJTUFSWSBLRVksXG4gICAgICAgICAgICBwcm9kdWN0X3Byb2R1Y3RfaWQgaW50ZWdlciBOT1QgTlVMTCxcbiAgICAgICAgICAgIGltYWdlX25hbWUgdGV4dCBOT1QgTlVMTCxcbiAgICAgICAgICAgIENPTlNUUkFJTlQgaW1hZ2VfcHJvZHVjdCBGT1JFSUdOIEtFWSAocHJvZHVjdF9wcm9kdWN0X2lkKVxuICAgICAgICAgICAgUkVGRVJFTkNFUyBwcm9kdWN0IChwcm9kdWN0X2lkKVxuICAgICAgICApO2ApICovXG4gIC8qICAgICAgICAgICAgICAgICBhd2FpdCBkYi5ydW4oYENSRUFURSBUQUJMRSBcIm9yZGVyXCIgKFxuICAgICAgICAgICAgICAgICAgICBvcmRlcl9pZCBpbnRlZ2VyIE5PVCBOVUxMIENPTlNUUkFJTlQgb3JkZXJfcGsgUFJJTUFSWSBLRVksXG4gICAgICAgICAgICAgICAgICAgIG9yZGVyX2RhdGUgdGV4dCBOT1QgTlVMTCxcbiAgICAgICAgICAgICAgICAgICAgb3JkZXJfcXVhbnRpdHkgaW50ZWdlciBOT1QgTlVMTCxcbiAgICAgICAgICAgICAgICAgICAgb3JkZXJfYW1vdW50IGludGVnZXIgTk9UIE5VTEwsXG4gICAgICAgICAgICAgICAgICAgIHByb2R1Y3RfcHJvZHVjdF9pZCBpbnRlZ2VyIE5PVCBOVUxMLFxuICAgICAgICAgICAgICAgICAgICBjbGllbnRfbmFtZSB0ZXh0IE5PVCBOVUxMLFxuICAgICAgICAgICAgICAgICAgICBhcmVhIHRleHQgTk9UIE5VTEwsXG4gICAgICAgICAgICAgICAgICAgIENPTlNUUkFJTlQgb3JkZXJfcHJvZHVjdCBGT1JFSUdOIEtFWSAocHJvZHVjdF9wcm9kdWN0X2lkKVxuICAgICAgICAgICAgICAgICAgICBSRUZFUkVOQ0VTIHByb2R1Y3QgKHByb2R1Y3RfaWQpXG4gICAgICAgICAgICAgICAgKTtgKVxufSAqL1xuICAvKiAgICAgICAgICAgICAgICAgYXdhaXQgZGIucnVuKGBDUkVBVEUgVEFCTEUgcHJvZHVjdCAoXG4gICAgICAgICAgICAgICAgICAgIHByb2R1Y3RfaWQgaW50ZWdlciBOT1QgTlVMTCBDT05TVFJBSU5UIHByb2R1Y3RfcGsgUFJJTUFSWSBLRVksXG4gICAgICAgICAgICAgICAgICAgIHByb2R1Y3RfbmFtZSB0ZXh0IE5PVCBOVUxMLFxuICAgICAgICAgICAgICAgICAgICBwcm9kdWN0X2Rlc2NyaXB0aW9uIHRleHQgTk9UIE5VTEwsXG4gICAgICAgICAgICAgICAgICAgIHByb2R1Y3RfcHJpY2UgaW50ZWdlciBOT1QgTlVMTCxcbiAgICAgICAgICAgICAgICAgICAgcHJvZHVjdF9xdWFudGl0eSBpbnRlZ2VyIE5PVCBOVUxMLFxuICAgICAgICAgICAgICAgICAgICBwcm9kdWN0X2RhdGUgdGV4dCBOT1QgTlVMTCxcbiAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcnlfY2F0ZWdvcnlfaWQgaW50ZWdlciBOT1QgTlVMTCxcbiAgICAgICAgICAgICAgICAgICAgY29sbGVjdGlvbl9jb2xsZWN0aW9uX2lkIGludGVnZXIgTk9UIE5VTEwsXG4gICAgICAgICAgICAgICAgICAgIENPTlNUUkFJTlQgcHJvZHVjdF9jYXRlZ29yeSBGT1JFSUdOIEtFWSAoY2F0ZWdvcnlfY2F0ZWdvcnlfaWQpXG4gICAgICAgICAgICAgICAgICAgIFJFRkVSRU5DRVMgY2F0ZWdvcnkgKGNhdGVnb3J5X2lkKSxcbiAgICAgICAgICAgICAgICAgICAgQ09OU1RSQUlOVCBwcm9kdWN0X2NvbGxlY3Rpb24gRk9SRUlHTiBLRVkgKGNvbGxlY3Rpb25fY29sbGVjdGlvbl9pZClcbiAgICAgICAgICAgICAgICAgICAgUkVGRVJFTkNFUyBjb2xsZWN0aW9uIChjb2xsZWN0aW9uX2lkKVxuICAgICAgICAgICAgICAgICk7YCkgKi9cblxuICAvLyBhd2FpdCBkYi5ydW4oYGluc2VydCBpbnRvIGNvbGxlY3Rpb24gKGNvbGxlY3Rpb25fbmFtZSkgdmFsdWVzICgnemVpbmFiJyk7YClcblxuICBjb25zdCBnZXRjb2xsZWN0aW9uID0gYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHJvd3MgPSBhd2FpdCBkYi5hbGwoXCJzZWxlY3QgKiBmcm9tIGNvbGxlY3Rpb25cIik7XG4gICAgcmV0dXJuIHJvd3M7XG4gIH07XG4gIGNvbnN0IGdldGNvbGxlY3Rpb25CeUlkID0gYXN5bmMgKGlkKSA9PiB7XG4gICAgY29uc3Qgcm93cyA9IGF3YWl0IGRiLmFsbChgc2VsZWN0ICogZnJvbSBjb2xsZWN0aW9uIHdoZXJlIGNvbGxlY3Rpb25faWQgPSR7aWR9IGApO1xuICAgIHJldHVybiByb3dzO1xuICB9O1xuICBjb25zdCBnZXRjb2xsZWN0aW9uQnlOYW1lID0gYXN5bmMobmFtZSkgPT57XG4gICAgY29uc3Qgcm93cyA9ICBhd2FpdCBkYi5hbGwoYHNlbGVjdCAqIGZyb20gY29sbGVjdGlvbiB3aGVyZSBjb2xsZWN0aW9uX25hbWUgPSAnJHtuYW1lfSdgKTtcbiAgICByZXR1cm4gcm93cztcbiAgfVxuICBjb25zdCB1cGRhdGVDb250YWN0ID0gYXN5bmMgKGlkLCBwcm9wcykgPT4ge1xuICAgIGNvbnN0IHsgbmFtZX0gPSBwcm9wcztcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBkYi5ydW4oYFVQREFURSBjb2xsZWN0aW9uIFNFVCBjb2xsZWN0aW5fbmFtZT3igJkke25hbWV94oCZIFdIRVJFIGNvbGxlY3Rpb25faWQgPSAke2lkfWApO1xuICB9XG5cbiAgY29uc3QgY29udHJvbGxlciA9IHtcbiAgICBnZXRjb2xsZWN0aW9uLFxuICAgIGdldGNvbGxlY3Rpb25CeUlkLFxuICAgIGdldGNvbGxlY3Rpb25CeU5hbWUsXG4gICAgdXBkYXRlQ29udGFjdFxuXG4gIH07XG4gIHJldHVybiBjb250cm9sbGVyO1xufTtcbmV4cG9ydCBkZWZhdWx0IGluaXRpYWxpemVEQiA7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "initializeDB",
        "sqlite",
        "open",
        "db",
        "getcollection",
        "all",
        "rows",
        "getcollectionById",
        "id",
        "getcollectionByName",
        "name",
        "updateContact",
        "props",
        "run",
        "result",
        "controller"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;AAEA,IAAMA,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFC,mBAAOC,IAAP,CAAY,aAAZ,CADE;;AAAA;AACbC,YAAAA,EADa;;AAEnB;;;;;;;;;;;;;;;;;;;;;AAoBA;;;;;;;;;;;;;AAYA;;;;;;;;;;;;;;AAeA;AAEMC,YAAAA,aAnDa;AAAA;AAAA;AAAA;AAAA;AAAA,sCAmDG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACDD,EAAE,CAACE,GAAH,CAAO,0BAAP,CADC;;AAAA;AACdC,wBAAAA,IADc;AAAA,yDAEbA,IAFa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAnDH;;AAAA,8BAmDbF,aAnDa;AAAA;AAAA;AAAA;;AAuDbG,YAAAA,iBAvDa;AAAA;AAAA;AAAA;AAAA;AAAA,sCAuDO,kBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACLL,EAAE,CAACE,GAAH,yDAAwDG,EAAxD,OADK;;AAAA;AAClBF,wBAAAA,IADkB;AAAA,0DAEjBA,IAFiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAvDP;;AAAA,8BAuDbC,iBAvDa;AAAA;AAAA;AAAA;;AA2DbE,YAAAA,mBA3Da;AAAA;AAAA;AAAA;AAAA;AAAA,sCA2DS,kBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACNP,EAAE,CAACE,GAAH,6DAA4DK,IAA5D,OADM;;AAAA;AACpBJ,wBAAAA,IADoB;AAAA,0DAEnBA,IAFmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA3DT;;AAAA,8BA2DbG,mBA3Da;AAAA;AAAA;AAAA;;AA+DbE,YAAAA,aA/Da;AAAA;AAAA;AAAA;AAAA;AAAA,sCA+DG,kBAAOH,EAAP,EAAWI,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACZF,wBAAAA,IADY,GACJE,KADI,CACZF,IADY;AAAA;AAAA,+BAECP,EAAE,CAACU,GAAH,sDAAgDH,IAAhD,0CAA+EF,EAA/E,EAFD;;AAAA;AAEdM,wBAAAA,MAFc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA/DH;;AAAA,8BA+DbH,aA/Da;AAAA;AAAA;AAAA;;AAoEbI,YAAAA,UApEa,GAoEA;AACjBX,cAAAA,aAAa,EAAbA,aADiB;AAEjBG,cAAAA,iBAAiB,EAAjBA,iBAFiB;AAGjBE,cAAAA,mBAAmB,EAAnBA,mBAHiB;AAIjBE,cAAAA,aAAa,EAAbA;AAJiB,aApEA;AAAA,8CA2EZI,UA3EY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZf,YAAY;AAAA;AAAA;AAAA,GAAlB;;eA6EeA,Y",
      "sourceRoot": "/home/marwa/Docs/Squins/back/src",
      "sourcesContent": [
        "import sqlite from \"sqlite\";\n\nconst initializeDB = async () => {\n  const db = await sqlite.open(\"./db.sqlite\");\n  /*   await db.run(`CREATE TABLE admin (\n        admin_id integer NOT NULL CONSTRAINT admin_pk PRIMARY KEY,\n        admin_user text NOT NULL,\n        admin_pass text NOT NULL\n    );`)\n    await db.run(`CREATE TABLE category (\n        category_id integer NOT NULL CONSTRAINT category_pk PRIMARY KEY,\n        category_name text NOT NULL\n    );`)\n      await db.run(`CREATE TABLE collection (\n        collection_id integer NOT NULL CONSTRAINT collection_pk PRIMARY KEY,\n        collection_name text NOT NULL\n    );`)\n         await db.run(`CREATE TABLE image (\n            image_id integer NOT NULL CONSTRAINT image_pk PRIMARY KEY,\n            product_product_id integer NOT NULL,\n            image_name text NOT NULL,\n            CONSTRAINT image_product FOREIGN KEY (product_product_id)\n            REFERENCES product (product_id)\n        );`) */\n  /*                 await db.run(`CREATE TABLE \"order\" (\n                    order_id integer NOT NULL CONSTRAINT order_pk PRIMARY KEY,\n                    order_date text NOT NULL,\n                    order_quantity integer NOT NULL,\n                    order_amount integer NOT NULL,\n                    product_product_id integer NOT NULL,\n                    client_name text NOT NULL,\n                    area text NOT NULL,\n                    CONSTRAINT order_product FOREIGN KEY (product_product_id)\n                    REFERENCES product (product_id)\n                );`)\n} */\n  /*                 await db.run(`CREATE TABLE product (\n                    product_id integer NOT NULL CONSTRAINT product_pk PRIMARY KEY,\n                    product_name text NOT NULL,\n                    product_description text NOT NULL,\n                    product_price integer NOT NULL,\n                    product_quantity integer NOT NULL,\n                    product_date text NOT NULL,\n                    category_category_id integer NOT NULL,\n                    collection_collection_id integer NOT NULL,\n                    CONSTRAINT product_category FOREIGN KEY (category_category_id)\n                    REFERENCES category (category_id),\n                    CONSTRAINT product_collection FOREIGN KEY (collection_collection_id)\n                    REFERENCES collection (collection_id)\n                );`) */\n\n  // await db.run(`insert into collection (collection_name) values ('zeinab');`)\n\n  const getcollection = async () => {\n    const rows = await db.all(\"select * from collection\");\n    return rows;\n  };\n  const getcollectionById = async (id) => {\n    const rows = await db.all(`select * from collection where collection_id =${id} `);\n    return rows;\n  };\n  const getcollectionByName = async(name) =>{\n    const rows =  await db.all(`select * from collection where collection_name = '${name}'`);\n    return rows;\n  }\n  const updateContact = async (id, props) => {\n    const { name} = props;\n    const result = await db.run(`UPDATE collection SET collectin_name=’${name}’ WHERE collection_id = ${id}`);\n  }\n\n  const controller = {\n    getcollection,\n    getcollectionById,\n    getcollectionByName,\n    updateContact\n\n  };\n  return controller;\n};\nexport default initializeDB ;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581089410090
  },
  "{\"sourceRoot\":\"/home/marwa/Docs/Sequins-Beads-Project/Squins/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/marwa/Docs/Sequins-Beads-Project/Squins/back\",\"filename\":\"/home/marwa/Docs/Sequins-Beads-Project/Squins/back/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/marwa/Docs/Sequins-Beads-Project/Squins/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/marwa/Docs/Sequins-Beads-Project/Squins/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/marwa/Docs/Sequins-Beads-Project/Squins/back",
      "filename": "/home/marwa/Docs/Sequins-Beads-Project/Squins/back/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/marwa/Docs/Sequins-Beads-Project/Squins/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/marwa/Docs/Sequins-Beads-Project/Squins/back/src/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/marwa/Docs/Sequins-Beads-Project/Squins/back/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/marwa/Docs/Sequins-Beads-Project/Squins/back/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _db = _interopRequireDefault(require(\"./db\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = (0, _express[\"default\"])();\n\nvar start =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee8() {\n    var controller;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            controller = _context8.sent;\n            app.get(\"/\", function (req, res) {\n              res.send(\"Welcome!\");\n            }); ///////////**********Collection Table**********//////////////\n            //////////////Read\n\n            app.get(\"/collection\",\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(req, res) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return controller.getcollection();\n\n                      case 2:\n                        result = _context.sent;\n                        res.json(result);\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x, _x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n            app.get(\"/collection/ID/:id\",\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(req, res) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return controller.getcollectionById(req.params.id);\n\n                      case 2:\n                        result = _context2.sent;\n                        res.json(result);\n\n                      case 4:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x3, _x4) {\n                return _ref3.apply(this, arguments);\n              };\n            }());\n            app.get(\"/collection/name/:name\",\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(req, res) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return controller.getcollectionByName(req.params.name);\n\n                      case 2:\n                        result = _context3.sent;\n                        res.json(result);\n\n                      case 4:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function (_x5, _x6) {\n                return _ref4.apply(this, arguments);\n              };\n            }()); //////////////////Delete\n\n            app.get(\"/collection/delete/id/:ID\",\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(req, res) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.next = 2;\n                        return controller.deleteCollectionByID(req.params.ID);\n\n                      case 2:\n                        result = _context4.sent;\n                        res.json(result);\n\n                      case 4:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function (_x7, _x8) {\n                return _ref5.apply(this, arguments);\n              };\n            }());\n            app.get(\"/collection/delete/name/:name\",\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(req, res) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        _context5.next = 2;\n                        return controller.deleteCollectionByName(req.params.name);\n\n                      case 2:\n                        result = _context5.sent;\n                        res.json(result);\n\n                      case 4:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5);\n              }));\n\n              return function (_x9, _x10) {\n                return _ref6.apply(this, arguments);\n              };\n            }()); ////////Create\n\n            app.get(\"/collection/create/\",\n            /*#__PURE__*/\n            function () {\n              var _ref7 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee6(req, res) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        _context6.next = 2;\n                        return controller.createCollectionByID(req.query);\n\n                      case 2:\n                        result = _context6.sent;\n                        res.json(result);\n\n                      case 4:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6);\n              }));\n\n              return function (_x11, _x12) {\n                return _ref7.apply(this, arguments);\n              };\n            }()); ///////////update\n\n            app.get(\"/collection/update/:ID\",\n            /*#__PURE__*/\n            function () {\n              var _ref8 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee7(req, res) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        _context7.next = 2;\n                        return controller.updateCollection(req.params.ID, req.query);\n\n                      case 2:\n                        result = _context7.sent;\n                        res.json(result);\n\n                      case 4:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7);\n              }));\n\n              return function (_x13, _x14) {\n                return _ref8.apply(this, arguments);\n              };\n            }());\n\n          case 11:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function start() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\napp.listen(8080, function () {\n  console.log(\"port 8080\");\n});\nstart();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInN0YXJ0IiwiY29udHJvbGxlciIsImdldCIsInJlcSIsInJlcyIsInNlbmQiLCJnZXRjb2xsZWN0aW9uIiwicmVzdWx0IiwianNvbiIsImdldGNvbGxlY3Rpb25CeUlkIiwicGFyYW1zIiwiaWQiLCJnZXRjb2xsZWN0aW9uQnlOYW1lIiwibmFtZSIsImRlbGV0ZUNvbGxlY3Rpb25CeUlEIiwiSUQiLCJkZWxldGVDb2xsZWN0aW9uQnlOYW1lIiwiY3JlYXRlQ29sbGVjdGlvbkJ5SUQiLCJxdWVyeSIsInVwZGF0ZUNvbGxlY3Rpb24iLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOzs7Ozs7OztBQUdBLElBQU1BLEdBQUcsR0FBRywwQkFBWjs7QUFFQSxJQUFNQyxLQUFLO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQkFBRztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNhLHFCQURiOztBQUFBO0FBQ05DLFlBQUFBLFVBRE07QUFHWkYsWUFBQUEsR0FBRyxDQUFDRyxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3pCQSxjQUFBQSxHQUFHLENBQUNDLElBQUosQ0FBUyxVQUFUO0FBQ0QsYUFGRCxFQUhZLENBUVo7QUFFQTs7QUFFQU4sWUFBQUEsR0FBRyxDQUFDRyxHQUFKLENBQVEsYUFBUjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsc0NBQXVCLGlCQUFPQyxHQUFQLEVBQVlDLEdBQVo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwrQkFDQUgsVUFBVSxDQUFDSyxhQUFYLEVBREE7O0FBQUE7QUFDZkMsd0JBQUFBLE1BRGU7QUFFckJILHdCQUFBQSxHQUFHLENBQUNJLElBQUosQ0FBU0QsTUFBVDs7QUFGcUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZUFBdkI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFJQVIsWUFBQUEsR0FBRyxDQUFDRyxHQUFKLENBQVEsb0JBQVI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHNDQUE4QixrQkFBT0MsR0FBUCxFQUFZQyxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsK0JBQ1BILFVBQVUsQ0FBQ1EsaUJBQVgsQ0FBNkJOLEdBQUcsQ0FBQ08sTUFBSixDQUFXQyxFQUF4QyxDQURPOztBQUFBO0FBQ3RCSix3QkFBQUEsTUFEc0I7QUFFNUJILHdCQUFBQSxHQUFHLENBQUNJLElBQUosQ0FBU0QsTUFBVDs7QUFGNEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZUFBOUI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFJQVIsWUFBQUEsR0FBRyxDQUFDRyxHQUFKLENBQVEsd0JBQVI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHNDQUFrQyxrQkFBT0MsR0FBUCxFQUFZQyxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsK0JBQ1hILFVBQVUsQ0FBQ1csbUJBQVgsQ0FBK0JULEdBQUcsQ0FBQ08sTUFBSixDQUFXRyxJQUExQyxDQURXOztBQUFBO0FBQzFCTix3QkFBQUEsTUFEMEI7QUFFaENILHdCQUFBQSxHQUFHLENBQUNJLElBQUosQ0FBU0QsTUFBVDs7QUFGZ0M7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZUFBbEM7O0FBQUE7QUFBQTtBQUFBO0FBQUEsaUJBcEJZLENBeUJaOztBQUdGUixZQUFBQSxHQUFHLENBQUNHLEdBQUosQ0FBUSwyQkFBUjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsc0NBQW9DLGtCQUFNQyxHQUFOLEVBQVVDLEdBQVY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwrQkFFbENILFVBQVUsQ0FBQ2Esb0JBQVgsQ0FBZ0NYLEdBQUcsQ0FBQ08sTUFBSixDQUFXSyxFQUEzQyxDQUZrQzs7QUFBQTtBQUM1QlIsd0JBQUFBLE1BRDRCO0FBR2xDSCx3QkFBQUEsR0FBRyxDQUFDSSxJQUFKLENBQVNELE1BQVQ7O0FBSGtDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGVBQXBDOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBTUFSLFlBQUFBLEdBQUcsQ0FBQ0csR0FBSixDQUFRLCtCQUFSO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxzQ0FBeUMsa0JBQU9DLEdBQVAsRUFBV0MsR0FBWDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLCtCQUV2Q0gsVUFBVSxDQUFDZSxzQkFBWCxDQUFtQ2IsR0FBRyxDQUFDTyxNQUFKLENBQVdHLElBQTlDLENBRnVDOztBQUFBO0FBQ2pDTix3QkFBQUEsTUFEaUM7QUFHdkNILHdCQUFBQSxHQUFHLENBQUNJLElBQUosQ0FBU0QsTUFBVDs7QUFIdUM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZUFBekM7O0FBQUE7QUFBQTtBQUFBO0FBQUEsaUJBbENjLENBeUNkOztBQUVBUixZQUFBQSxHQUFHLENBQUNHLEdBQUosQ0FBUSxxQkFBUjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsc0NBQThCLGtCQUFPQyxHQUFQLEVBQVdDLEdBQVg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwrQkFFNUJILFVBQVUsQ0FBQ2dCLG9CQUFYLENBQWdDZCxHQUFHLENBQUNlLEtBQXBDLENBRjRCOztBQUFBO0FBQ3RCWCx3QkFBQUEsTUFEc0I7QUFHNUJILHdCQUFBQSxHQUFHLENBQUNJLElBQUosQ0FBU0QsTUFBVDs7QUFINEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZUFBOUI7O0FBQUE7QUFBQTtBQUFBO0FBQUEsaUJBM0NjLENBaURkOztBQUVBUixZQUFBQSxHQUFHLENBQUNHLEdBQUosQ0FBUSx3QkFBUjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsc0NBQWlDLGtCQUFPQyxHQUFQLEVBQVdDLEdBQVg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwrQkFFL0JILFVBQVUsQ0FBQ2tCLGdCQUFYLENBQTRCaEIsR0FBRyxDQUFDTyxNQUFKLENBQVdLLEVBQXZDLEVBQTBDWixHQUFHLENBQUNlLEtBQTlDLENBRitCOztBQUFBO0FBQ3pCWCx3QkFBQUEsTUFEeUI7QUFHL0JILHdCQUFBQSxHQUFHLENBQUNJLElBQUosQ0FBU0QsTUFBVDs7QUFIK0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZUFBakM7O0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBbkRjO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQUxQLEtBQUs7QUFBQTtBQUFBO0FBQUEsR0FBWDs7QUE4REFELEdBQUcsQ0FBQ3FCLE1BQUosQ0FBVyxJQUFYLEVBQWlCLFlBQU07QUFDckJDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFdBQVo7QUFDRCxDQUZEO0FBR0F0QixLQUFLIiwic291cmNlUm9vdCI6Ii9ob21lL21hcndhL0RvY3MvU2VxdWlucy1CZWFkcy1Qcm9qZWN0L1NxdWlucy9iYWNrL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQgZGIgZnJvbSBcIi4vZGJcIjtcbmltcG9ydCBpbml0aWFsaXplREIgZnJvbSBcIi4vZGJcIjtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5jb25zdCBzdGFydCA9IGFzeW5jICgpID0+IHtcbiAgY29uc3QgY29udHJvbGxlciA9IGF3YWl0IGluaXRpYWxpemVEQigpO1xuXG4gIGFwcC5nZXQoXCIvXCIsIChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5zZW5kKFwiV2VsY29tZSFcIik7XG4gIH0pO1xuXG5cbiAgLy8vLy8vLy8vLy8qKioqKioqKioqQ29sbGVjdGlvbiBUYWJsZSoqKioqKioqKiovLy8vLy8vLy8vLy8vL1xuXG4gIC8vLy8vLy8vLy8vLy8vUmVhZFxuXG4gIGFwcC5nZXQoXCIvY29sbGVjdGlvblwiLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjb250cm9sbGVyLmdldGNvbGxlY3Rpb24oKTtcbiAgICByZXMuanNvbihyZXN1bHQpO1xuICB9KTtcbiAgYXBwLmdldChcIi9jb2xsZWN0aW9uL0lELzppZFwiLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjb250cm9sbGVyLmdldGNvbGxlY3Rpb25CeUlkKHJlcS5wYXJhbXMuaWQpO1xuICAgIHJlcy5qc29uKHJlc3VsdCk7XG4gIH0pO1xuICBhcHAuZ2V0KFwiL2NvbGxlY3Rpb24vbmFtZS86bmFtZVwiLCBhc3luYyAocmVxLCByZXMpPT4ge1xuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGNvbnRyb2xsZXIuZ2V0Y29sbGVjdGlvbkJ5TmFtZShyZXEucGFyYW1zLm5hbWUpO1xuICAgIHJlcy5qc29uKHJlc3VsdCk7XG4gIH0pO1xuXG4gIC8vLy8vLy8vLy8vLy8vLy8vL0RlbGV0ZVxuXG5cbmFwcC5nZXQoXCIvY29sbGVjdGlvbi9kZWxldGUvaWQvOklEXCIsYXN5bmMocmVxLHJlcyk9PntcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXRcbiAgY29udHJvbGxlci5kZWxldGVDb2xsZWN0aW9uQnlJRChyZXEucGFyYW1zLklEKTtcbiAgcmVzLmpzb24ocmVzdWx0KTtcbn0pXG4gIFxuYXBwLmdldChcIi9jb2xsZWN0aW9uL2RlbGV0ZS9uYW1lLzpuYW1lXCIsIGFzeW5jIChyZXEscmVzKT0+IHtcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXRcbiAgY29udHJvbGxlci5kZWxldGVDb2xsZWN0aW9uQnlOYW1lIChyZXEucGFyYW1zLm5hbWUpO1xuICByZXMuanNvbihyZXN1bHQpO1xufSlcblxuXG4vLy8vLy8vL0NyZWF0ZVxuXG5hcHAuZ2V0KFwiL2NvbGxlY3Rpb24vY3JlYXRlL1wiLGFzeW5jIChyZXEscmVzKT0+e1xuICBjb25zdCByZXN1bHQgPSBhd2FpdCBcbiAgY29udHJvbGxlci5jcmVhdGVDb2xsZWN0aW9uQnlJRChyZXEucXVlcnkpO1xuICByZXMuanNvbihyZXN1bHQpO1xufSk7XG5cbi8vLy8vLy8vLy8vdXBkYXRlXG5cbmFwcC5nZXQoXCIvY29sbGVjdGlvbi91cGRhdGUvOklEXCIsYXN5bmMgKHJlcSxyZXMpPT57XG4gIGNvbnN0IHJlc3VsdCA9IGF3YWl0IFxuICBjb250cm9sbGVyLnVwZGF0ZUNvbGxlY3Rpb24ocmVxLnBhcmFtcy5JRCxyZXEucXVlcnkpO1xuICByZXMuanNvbihyZXN1bHQpO1xufSk7XG5cblxuXG5cbn07XG5cbmFwcC5saXN0ZW4oODA4MCwgKCkgPT4ge1xuICBjb25zb2xlLmxvZyhcInBvcnQgODA4MFwiKTtcbn0pO1xuc3RhcnQoKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "start",
        "controller",
        "get",
        "req",
        "res",
        "send",
        "getcollection",
        "result",
        "json",
        "getcollectionById",
        "params",
        "id",
        "getcollectionByName",
        "name",
        "deleteCollectionByID",
        "ID",
        "deleteCollectionByName",
        "createCollectionByID",
        "query",
        "updateCollection",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;;;;;;;AAGA,IAAMA,GAAG,GAAG,0BAAZ;;AAEA,IAAMC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACa,qBADb;;AAAA;AACNC,YAAAA,UADM;AAGZF,YAAAA,GAAG,CAACG,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,cAAAA,GAAG,CAACC,IAAJ,CAAS,UAAT;AACD,aAFD,EAHY,CAQZ;AAEA;;AAEAN,YAAAA,GAAG,CAACG,GAAJ,CAAQ,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAuB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACAH,UAAU,CAACK,aAAX,EADA;;AAAA;AACfC,wBAAAA,MADe;AAErBH,wBAAAA,GAAG,CAACI,IAAJ,CAASD,MAAT;;AAFqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAvB;;AAAA;AAAA;AAAA;AAAA;AAIAR,YAAAA,GAAG,CAACG,GAAJ,CAAQ,oBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAA8B,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACPH,UAAU,CAACQ,iBAAX,CAA6BN,GAAG,CAACO,MAAJ,CAAWC,EAAxC,CADO;;AAAA;AACtBJ,wBAAAA,MADsB;AAE5BH,wBAAAA,GAAG,CAACI,IAAJ,CAASD,MAAT;;AAF4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA9B;;AAAA;AAAA;AAAA;AAAA;AAIAR,YAAAA,GAAG,CAACG,GAAJ,CAAQ,wBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAkC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACXH,UAAU,CAACW,mBAAX,CAA+BT,GAAG,CAACO,MAAJ,CAAWG,IAA1C,CADW;;AAAA;AAC1BN,wBAAAA,MAD0B;AAEhCH,wBAAAA,GAAG,CAACI,IAAJ,CAASD,MAAT;;AAFgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAlC;;AAAA;AAAA;AAAA;AAAA,iBApBY,CAyBZ;;AAGFR,YAAAA,GAAG,CAACG,GAAJ,CAAQ,2BAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAoC,kBAAMC,GAAN,EAAUC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAElCH,UAAU,CAACa,oBAAX,CAAgCX,GAAG,CAACO,MAAJ,CAAWK,EAA3C,CAFkC;;AAAA;AAC5BR,wBAAAA,MAD4B;AAGlCH,wBAAAA,GAAG,CAACI,IAAJ,CAASD,MAAT;;AAHkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAApC;;AAAA;AAAA;AAAA;AAAA;AAMAR,YAAAA,GAAG,CAACG,GAAJ,CAAQ,+BAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAyC,kBAAOC,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEvCH,UAAU,CAACe,sBAAX,CAAmCb,GAAG,CAACO,MAAJ,CAAWG,IAA9C,CAFuC;;AAAA;AACjCN,wBAAAA,MADiC;AAGvCH,wBAAAA,GAAG,CAACI,IAAJ,CAASD,MAAT;;AAHuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAzC;;AAAA;AAAA;AAAA;AAAA,iBAlCc,CAyCd;;AAEAR,YAAAA,GAAG,CAACG,GAAJ,CAAQ,qBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAA8B,kBAAOC,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAE5BH,UAAU,CAACgB,oBAAX,CAAgCd,GAAG,CAACe,KAApC,CAF4B;;AAAA;AACtBX,wBAAAA,MADsB;AAG5BH,wBAAAA,GAAG,CAACI,IAAJ,CAASD,MAAT;;AAH4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA9B;;AAAA;AAAA;AAAA;AAAA,iBA3Cc,CAiDd;;AAEAR,YAAAA,GAAG,CAACG,GAAJ,CAAQ,wBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAiC,kBAAOC,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAE/BH,UAAU,CAACkB,gBAAX,CAA4BhB,GAAG,CAACO,MAAJ,CAAWK,EAAvC,EAA0CZ,GAAG,CAACe,KAA9C,CAF+B;;AAAA;AACzBX,wBAAAA,MADyB;AAG/BH,wBAAAA,GAAG,CAACI,IAAJ,CAASD,MAAT;;AAH+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAjC;;AAAA;AAAA;AAAA;AAAA;;AAnDc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALP,KAAK;AAAA;AAAA;AAAA,GAAX;;AA8DAD,GAAG,CAACqB,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,CAFD;AAGAtB,KAAK",
      "sourceRoot": "/home/marwa/Docs/Sequins-Beads-Project/Squins/back/src",
      "sourcesContent": [
        "import express from \"express\";\nimport db from \"./db\";\nimport initializeDB from \"./db\";\n\nconst app = express();\n\nconst start = async () => {\n  const controller = await initializeDB();\n\n  app.get(\"/\", (req, res) => {\n    res.send(\"Welcome!\");\n  });\n\n\n  ///////////**********Collection Table**********//////////////\n\n  //////////////Read\n\n  app.get(\"/collection\", async (req, res) => {\n    const result = await controller.getcollection();\n    res.json(result);\n  });\n  app.get(\"/collection/ID/:id\", async (req, res) => {\n    const result = await controller.getcollectionById(req.params.id);\n    res.json(result);\n  });\n  app.get(\"/collection/name/:name\", async (req, res)=> {\n    const result = await controller.getcollectionByName(req.params.name);\n    res.json(result);\n  });\n\n  //////////////////Delete\n\n\napp.get(\"/collection/delete/id/:ID\",async(req,res)=>{\n  const result = await\n  controller.deleteCollectionByID(req.params.ID);\n  res.json(result);\n})\n  \napp.get(\"/collection/delete/name/:name\", async (req,res)=> {\n  const result = await\n  controller.deleteCollectionByName (req.params.name);\n  res.json(result);\n})\n\n\n////////Create\n\napp.get(\"/collection/create/\",async (req,res)=>{\n  const result = await \n  controller.createCollectionByID(req.query);\n  res.json(result);\n});\n\n///////////update\n\napp.get(\"/collection/update/:ID\",async (req,res)=>{\n  const result = await \n  controller.updateCollection(req.params.ID,req.query);\n  res.json(result);\n});\n\n\n\n\n};\n\napp.listen(8080, () => {\n  console.log(\"port 8080\");\n});\nstart();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581353473070
  },
  "{\"sourceRoot\":\"/home/marwa/Docs/Sequins-Beads-Project/Squins/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/marwa/Docs/Sequins-Beads-Project/Squins/back\",\"filename\":\"/home/marwa/Docs/Sequins-Beads-Project/Squins/back/src/db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/marwa/Docs/Sequins-Beads-Project/Squins/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/marwa/Docs/Sequins-Beads-Project/Squins/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/marwa/Docs/Sequins-Beads-Project/Squins/back",
      "filename": "/home/marwa/Docs/Sequins-Beads-Project/Squins/back/src/db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/marwa/Docs/Sequins-Beads-Project/Squins/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/marwa/Docs/Sequins-Beads-Project/Squins/back/src/db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/marwa/Docs/Sequins-Beads-Project/Squins/back/src/db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/marwa/Docs/Sequins-Beads-Project/Squins/back/src",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar initializeDB =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee8() {\n    var db, getcollection, getcollectionById, getcollectionByName, deleteCollectionByID, deleteCollectionByName, createCollectionByID, updateCollection, controller;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return _sqlite[\"default\"].open(\"./db.sqlite\");\n\n          case 2:\n            db = _context8.sent;\n\n            /*   await db.run(`CREATE TABLE admin (\n                  admin_id integer NOT NULL CONSTRAINT admin_pk PRIMARY KEY,\n                  admin_user text NOT NULL,\n                  admin_pass text NOT NULL\n              );`)\n              await db.run(`CREATE TABLE category (\n                  category_id integer NOT NULL CONSTRAINT category_pk PRIMARY KEY,\n                  category_name text NOT NULL\n              );`)\n                await db.run(`CREATE TABLE collection (\n                  collection_id integer NOT NULL CONSTRAINT collection_pk PRIMARY KEY,\n                  collection_name text NOT NULL\n              );`)\n                   await db.run(`CREATE TABLE image (\n                      image_id integer NOT NULL CONSTRAINT image_pk PRIMARY KEY,\n                      product_product_id integer NOT NULL,\n                      image_name text NOT NULL,\n                      CONSTRAINT image_product FOREIGN KEY (product_product_id)\n                      REFERENCES product (product_id)\n                  );`) */\n\n            /*                 await db.run(`CREATE TABLE \"order\" (\n                              order_id integer NOT NULL CONSTRAINT order_pk PRIMARY KEY,\n                              order_date text NOT NULL,\n                              order_quantity integer NOT NULL,\n                              order_amount integer NOT NULL,\n                              product_product_id integer NOT NULL,\n                              client_name text NOT NULL,\n                              area text NOT NULL,\n                              CONSTRAINT order_product FOREIGN KEY (product_product_id)\n                              REFERENCES product (product_id)\n                          );`)\n            } */\n\n            /*                 await db.run(`CREATE TABLE product (\n                              product_id integer NOT NULL CONSTRAINT product_pk PRIMARY KEY,\n                              product_name text NOT NULL,\n                              product_description text NOT NULL,\n                              product_price integer NOT NULL,\n                              product_quantity integer NOT NULL,\n                              product_date text NOT NULL,\n                              category_category_id integer NOT NULL,\n                              collection_collection_id integer NOT NULL,\n                              CONSTRAINT product_category FOREIGN KEY (category_category_id)\n                              REFERENCES category (category_id),\n                              CONSTRAINT product_collection FOREIGN KEY (collection_collection_id)\n                              REFERENCES collection (collection_id)\n                          );`) */\n            //await db.run(`insert into collection (collection_name) values ('zeinab');`)\n            getcollection =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee() {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return db.all(\"select * from collection\");\n\n                      case 2:\n                        rows = _context.sent;\n                        return _context.abrupt(\"return\", rows);\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function getcollection() {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            getcollectionById =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(id) {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return db.all(\"select * from collection where collection_id =\".concat(id, \" \"));\n\n                      case 2:\n                        rows = _context2.sent;\n                        return _context2.abrupt(\"return\", rows);\n\n                      case 4:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function getcollectionById(_x) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            getcollectionByName =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(name) {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return db.all(\"select * from collection where collection_name = '\".concat(name, \"'\"));\n\n                      case 2:\n                        rows = _context3.sent;\n                        return _context3.abrupt(\"return\", rows);\n\n                      case 4:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function getcollectionByName(_x2) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            deleteCollectionByID =\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(id) {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.prev = 0;\n                        _context4.next = 3;\n                        return db.run(\"delete from collection where collection_id=\".concat(id));\n\n                      case 3:\n                        rows = _context4.sent;\n\n                        if (!(rows.stmt.changes > 0)) {\n                          _context4.next = 8;\n                          break;\n                        }\n\n                        return _context4.abrupt(\"return\", true);\n\n                      case 8:\n                        return _context4.abrupt(\"return\", false);\n\n                      case 9:\n                        _context4.next = 14;\n                        break;\n\n                      case 11:\n                        _context4.prev = 11;\n                        _context4.t0 = _context4[\"catch\"](0);\n                        throw new Error(\"not found\" + _context4.t0);\n\n                      case 14:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[0, 11]]);\n              }));\n\n              return function deleteCollectionByID(_x3) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            deleteCollectionByName =\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(name) {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        _context5.prev = 0;\n                        _context5.next = 3;\n                        return db.run(\"delete from collection where collection_name='\".concat(name, \"'\"));\n\n                      case 3:\n                        rows = _context5.sent;\n\n                        if (!(rows.stmt.changes > 0)) {\n                          _context5.next = 8;\n                          break;\n                        }\n\n                        return _context5.abrupt(\"return\", true);\n\n                      case 8:\n                        return _context5.abrupt(\"return\", false);\n\n                      case 9:\n                        _context5.next = 14;\n                        break;\n\n                      case 11:\n                        _context5.prev = 11;\n                        _context5.t0 = _context5[\"catch\"](0);\n                        throw new Error(\"not found\");\n\n                      case 14:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[0, 11]]);\n              }));\n\n              return function deleteCollectionByName(_x4) {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n\n            createCollectionByID =\n            /*#__PURE__*/\n            function () {\n              var _ref7 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee6(props) {\n                var name, rows;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        name = props.name;\n                        _context6.prev = 1;\n                        _context6.next = 4;\n                        return db.run(\"insert into collection (collection_name) values ('\".concat(name, \"')\"));\n\n                      case 4:\n                        rows = _context6.sent;\n                        return _context6.abrupt(\"return\", rows.stmt.lastID);\n\n                      case 8:\n                        _context6.prev = 8;\n                        _context6.t0 = _context6[\"catch\"](1);\n                        throw new Error(\"no connection to database\");\n\n                      case 11:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6, null, [[1, 8]]);\n              }));\n\n              return function createCollectionByID(_x5) {\n                return _ref7.apply(this, arguments);\n              };\n            }();\n\n            updateCollection =\n            /*#__PURE__*/\n            function () {\n              var _ref8 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee7(id, props) {\n                var name, rows;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        name = props.name;\n\n                        if (!name) {\n                          _context7.next = 12;\n                          break;\n                        }\n\n                        _context7.prev = 2;\n                        _context7.next = 5;\n                        return db.run(\"update collection set collection_name='\".concat(name, \"' where collection_id=\").concat(id));\n\n                      case 5:\n                        rows = _context7.sent;\n                        return _context7.abrupt(\"return\", rows.stmt.lastID);\n\n                      case 9:\n                        _context7.prev = 9;\n                        _context7.t0 = _context7[\"catch\"](2);\n                        throw new Error(\"no connection to database\");\n\n                      case 12:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7, null, [[2, 9]]);\n              }));\n\n              return function updateCollection(_x6, _x7) {\n                return _ref8.apply(this, arguments);\n              };\n            }();\n\n            controller = {\n              getcollection: getcollection,\n              getcollectionById: getcollectionById,\n              getcollectionByName: getcollectionByName,\n              deleteCollectionByID: deleteCollectionByID,\n              deleteCollectionByName: deleteCollectionByName,\n              createCollectionByID: createCollectionByID,\n              updateCollection: updateCollection\n            };\n            return _context8.abrupt(\"return\", controller);\n\n          case 12:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function initializeDB() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = initializeDB;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "initializeDB",
        "sqlite",
        "open",
        "db",
        "getcollection",
        "all",
        "rows",
        "getcollectionById",
        "id",
        "getcollectionByName",
        "name",
        "deleteCollectionByID",
        "run",
        "stmt",
        "changes",
        "Error",
        "deleteCollectionByName",
        "createCollectionByID",
        "props",
        "lastID",
        "updateCollection",
        "controller"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;AAEA,IAAMA,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFC,mBAAOC,IAAP,CAAY,aAAZ,CADE;;AAAA;AACbC,YAAAA,EADa;;AAEnB;;;;;;;;;;;;;;;;;;;;;AAoBA;;;;;;;;;;;;;AAYA;;;;;;;;;;;;;;AAeC;AAEKC,YAAAA,aAnDa;AAAA;AAAA;AAAA;AAAA;AAAA,sCAmDG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACDD,EAAE,CAACE,GAAH,CAAO,0BAAP,CADC;;AAAA;AACdC,wBAAAA,IADc;AAAA,yDAEbA,IAFa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAnDH;;AAAA,8BAmDbF,aAnDa;AAAA;AAAA;AAAA;;AAuDbG,YAAAA,iBAvDa;AAAA;AAAA;AAAA;AAAA;AAAA,sCAuDO,kBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACLL,EAAE,CAACE,GAAH,yDAAwDG,EAAxD,OADK;;AAAA;AAClBF,wBAAAA,IADkB;AAAA,0DAEjBA,IAFiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAvDP;;AAAA,8BAuDbC,iBAvDa;AAAA;AAAA;AAAA;;AA2DbE,YAAAA,mBA3Da;AAAA;AAAA;AAAA;AAAA;AAAA,sCA2DS,kBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACNP,EAAE,CAACE,GAAH,6DAA4DK,IAA5D,OADM;;AAAA;AACpBJ,wBAAAA,IADoB;AAAA,0DAEnBA,IAFmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA3DT;;AAAA,8BA2DbG,mBA3Da;AAAA;AAAA;AAAA;;AAgEbE,YAAAA,oBAhEa;AAAA;AAAA;AAAA;AAAA;AAAA,sCAgEU,kBAAMH,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEZL,EAAE,CAACS,GAAH,sDAAqDJ,EAArD,EAFY;;AAAA;AAEzBF,wBAAAA,IAFyB;;AAAA,8BAG5BA,IAAI,CAACO,IAAL,CAAUC,OAAV,GAAkB,CAHU;AAAA;AAAA;AAAA;;AAAA,0DAItB,IAJsB;;AAAA;AAAA,0DAOxB,KAPwB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,8BASpB,IAAIC,KAAJ,CAAU,0BAAV,CAToB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhEV;;AAAA,8BAgEbJ,oBAhEa;AAAA;AAAA;AAAA;;AA6EbK,YAAAA,sBA7Ea;AAAA;AAAA;AAAA;AAAA;AAAA,sCA6EY,kBAAON,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAERP,EAAE,CAACS,GAAH,yDAAyDF,IAAzD,OAFQ;;AAAA;AAErBJ,wBAAAA,IAFqB;;AAAA,8BAGxBA,IAAI,CAACO,IAAL,CAAUC,OAAV,GAAkB,CAHM;AAAA;AAAA;AAAA;;AAAA,0DAIlB,IAJkB;;AAAA;AAAA,0DAOpB,KAPoB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,8BAQrB,IAAIC,KAAJ,CAAU,WAAV,CARqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA7EZ;;AAAA,8BA6EbC,sBA7Ea;AAAA;AAAA;AAAA;;AAyFXC,YAAAA,oBAzFW;AAAA;AAAA;AAAA;AAAA;AAAA,sCAyFY,kBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBR,wBAAAA,IADoB,GACdQ,KADc,CACpBR,IADoB;AAAA;AAAA;AAAA,+BAGRP,EAAE,CAACS,GAAH,6DAA6DF,IAA7D,QAHQ;;AAAA;AAGrBJ,wBAAAA,IAHqB;AAAA,0DAIpBA,IAAI,CAACO,IAAL,CAAUM,MAJU;;AAAA;AAAA;AAAA;AAAA,8BAMnB,IAAIJ,KAAJ,CAAU,2BAAV,CANmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAzFZ;;AAAA,8BAyFXE,oBAzFW;AAAA;AAAA;AAAA;;AAoGXG,YAAAA,gBApGW;AAAA;AAAA;AAAA;AAAA;AAAA,sCAoGQ,kBAAOZ,EAAP,EAAUU,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBR,wBAAAA,IADgB,GACVQ,KADU,CAChBR,IADgB;;AAAA,6BAEpBA,IAFoB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAIJP,EAAE,CAACS,GAAH,kDAAkDF,IAAlD,mCAA+EF,EAA/E,EAJI;;AAAA;AAIjBF,wBAAAA,IAJiB;AAAA,0DAKhBA,IAAI,CAACO,IAAL,CAAUM,MALM;;AAAA;AAAA;AAAA;AAAA,8BAQf,IAAIJ,KAAJ,CAAU,2BAAV,CARe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eApGR;;AAAA,8BAoGXK,gBApGW;AAAA;AAAA;AAAA;;AAiHbC,YAAAA,UAjHa,GAiHA;AACjBjB,cAAAA,aAAa,EAAbA,aADiB;AAEjBG,cAAAA,iBAAiB,EAAjBA,iBAFiB;AAGjBE,cAAAA,mBAAmB,EAAnBA,mBAHiB;AAIjBE,cAAAA,oBAAoB,EAApBA,oBAJiB;AAKjBK,cAAAA,sBAAsB,EAAtBA,sBALiB;AAMjBC,cAAAA,oBAAoB,EAApBA,oBANiB;AAOjBG,cAAAA,gBAAgB,EAAhBA;AAPiB,aAjHA;AAAA,8CA6HZC,UA7HY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZrB,YAAY;AAAA;AAAA;AAAA,GAAlB;;eA+HeA,Y",
      "sourceRoot": "/home/marwa/Docs/Sequins-Beads-Project/Squins/back/src",
      "sourcesContent": [
        "import sqlite from \"sqlite\";\n\nconst initializeDB = async () => {\n  const db = await sqlite.open(\"./db.sqlite\");\n  /*   await db.run(`CREATE TABLE admin (\n        admin_id integer NOT NULL CONSTRAINT admin_pk PRIMARY KEY,\n        admin_user text NOT NULL,\n        admin_pass text NOT NULL\n    );`)\n    await db.run(`CREATE TABLE category (\n        category_id integer NOT NULL CONSTRAINT category_pk PRIMARY KEY,\n        category_name text NOT NULL\n    );`)\n      await db.run(`CREATE TABLE collection (\n        collection_id integer NOT NULL CONSTRAINT collection_pk PRIMARY KEY,\n        collection_name text NOT NULL\n    );`)\n         await db.run(`CREATE TABLE image (\n            image_id integer NOT NULL CONSTRAINT image_pk PRIMARY KEY,\n            product_product_id integer NOT NULL,\n            image_name text NOT NULL,\n            CONSTRAINT image_product FOREIGN KEY (product_product_id)\n            REFERENCES product (product_id)\n        );`) */\n  /*                 await db.run(`CREATE TABLE \"order\" (\n                    order_id integer NOT NULL CONSTRAINT order_pk PRIMARY KEY,\n                    order_date text NOT NULL,\n                    order_quantity integer NOT NULL,\n                    order_amount integer NOT NULL,\n                    product_product_id integer NOT NULL,\n                    client_name text NOT NULL,\n                    area text NOT NULL,\n                    CONSTRAINT order_product FOREIGN KEY (product_product_id)\n                    REFERENCES product (product_id)\n                );`)\n} */\n  /*                 await db.run(`CREATE TABLE product (\n                    product_id integer NOT NULL CONSTRAINT product_pk PRIMARY KEY,\n                    product_name text NOT NULL,\n                    product_description text NOT NULL,\n                    product_price integer NOT NULL,\n                    product_quantity integer NOT NULL,\n                    product_date text NOT NULL,\n                    category_category_id integer NOT NULL,\n                    collection_collection_id integer NOT NULL,\n                    CONSTRAINT product_category FOREIGN KEY (category_category_id)\n                    REFERENCES category (category_id),\n                    CONSTRAINT product_collection FOREIGN KEY (collection_collection_id)\n                    REFERENCES collection (collection_id)\n                );`) */\n\n   //await db.run(`insert into collection (collection_name) values ('zeinab');`)\n\n  const getcollection = async () => {\n    const rows = await db.all(\"select * from collection\");\n    return rows;\n  };\n  const getcollectionById = async (id) => {\n    const rows = await db.all(`select * from collection where collection_id =${id} `);\n    return rows;\n  };\n  const getcollectionByName = async(name) =>{\n    const rows =  await db.all(`select * from collection where collection_name = '${name}'`);\n    return rows;\n  }\n  \n  const deleteCollectionByID = async(id) =>{\n   try{ \nconst rows = await db.run(`delete from collection where collection_id=${id}`);\nif(rows.stmt.changes>0){\n  return true;\n}\nelse \nreturn false;\n   }catch(err){\n     throw new Error(\"not found\"+err)\n   }\n  }\n\n  const deleteCollectionByName = async (name) =>{\n    try{\n      const rows = await db.run (`delete from collection where collection_name='${name}'`);\n      if(rows.stmt.changes>0){\n        return true;\n      }\n      else \n      return false;}catch{\n      throw new Error(\"not found\");}\n    }\n\n\n    const createCollectionByID = async (props) =>{\n      const {name}=props;\n      try{\n      const rows = await db.run (`insert into collection (collection_name) values ('${name}')`);\n      return rows.stmt.lastID;\n      }catch(err){\n        throw new Error(\"no connection to database\");\n      }\n    }\n  \n\n    const updateCollection = async (id,props) =>{\n      const {name}=props;\n      if(name){\n      try{\n      const rows = await db.run (`update collection set collection_name='${name}' where collection_id=${id}`);\n      return rows.stmt.lastID;\n      \n      }catch(err){\n        throw new Error(\"no connection to database\");\n      }\n    }\n    }\n\n  const controller = {\n    getcollection,\n    getcollectionById,\n    getcollectionByName,\n    deleteCollectionByID,\n    deleteCollectionByName,\n    createCollectionByID,\n    updateCollection\n\n    \n\n  };\n  return controller;\n};\nexport default initializeDB ;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581353573860
  }
}